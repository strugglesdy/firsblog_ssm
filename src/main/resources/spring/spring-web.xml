<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置springMVC -->
    <!-- 1.开启springMVC注解模式
     a.自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter
     b.默认提供一系列的功能:数据绑定，数字和日期的format@NumberFormat,@DateTimeFormat
     c:xml,json的默认读写支持-->
    <mvc:annotation-driven/>

    <!-- 2.静态资源默认servlet配置
     a.加入对静态资源处理：js,gif,png
     b.允许使用 "/" 做整体映射-->
    <mvc:default-servlet-handler/>

    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 上传文件 配置multipart解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 最大内存大小 -->
        <property name="maxInMemorySize" value="10240"/>
        <!-- 最大文件大小，-1为不限制大小 -->
        <property name="maxUploadSize" value="-1"/>
    </bean>
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
    <!--&lt;!&ndash; 日期格式转换 &ndash;&gt;-->
    <!--<property name="webBindingInitializer">-->
    <!--<bean class="com.blog.converter.DateConverter" />-->
    <!--</property>-->
    <!--</bean>-->

    <!--配置拦截器-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 多个拦截器,顺序执行   /**表示所有url包括子url路径&ndash;&gt;-->
        <!--&lt;!&ndash;登录认证拦截器&ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.blog.interceptor.LoginInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法(1,2)，然后逆序调用每个拦截器的postHandle和afterCompletion方法(2,1) &ndash;&gt;-->
    <!--</mvc:interceptors>-->

    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.blog.controller"/>

</beans>